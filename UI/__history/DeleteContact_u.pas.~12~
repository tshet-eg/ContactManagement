unit DeleteContact_u;

interface

uses System.Classes, SysUtils;

type
  TDeleteContact = class
    FGridData: TArray<string>;
    FDeletedContact: string;
    procedure DeleteContact;
    procedure LoadToDeletedtxt;
  end;

var
  clsDeleteContact: TDeleteContact;

implementation

{ TDeleteContact }

procedure TDeleteContact.DeleteContact;
var
  vFileLine: TStringList;
  vLine: string;
  vRowArray: TArray<string>;
begin
  vFileLine := TStringList.Create;
  try
    if FileExists('ContactsLog.txt') then
      vFileLine.LoadFromFile('ContactsLog.txt');

    for var vRow := 0 to vFileLine.Count - 1 do
    begin
      vLine := vFileLine[vRow];
      vRowArray := vLine.split([',']);
      if vRowArray[1] = FGridData[0] then
      begin
        FDeletedContact := string.join(',', vRowArray);
        vFileLine.Delete(vRow);
      end;
      vFileLine.SaveToFile('ContactsLog.txt');
      LoadToDeletedtxt;
    end;
  finally
    vFileLine.Free;
  end;

end;

procedure TDeleteContact.LoadToDeletedtxt;
var
  vDeleteFile: TStringList;
begin
  vDeleteFile := TStringList.Create;
  try
    if FileExists('DeletedContacts.txt') then
      vDeleteFile.LoadFromFile('DeletedContacts.txt');
    vDeleteFile.Add(FDeletedContact);
    vDeleteFile.SaveToFile('DeletedContacts.txt');
  finally
    vDeleteFile.Free;
  end;
end;

end.
